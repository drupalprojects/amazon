<?php
// $Id$

/**
 * Implementation of hook_help().
 */

/**
 * Implementation of hook_filter_tips().
 */
function amazon_filter_filter_tips($delta, $format, $long = FALSE) {
  return t('Link to Amazon products with: [amazon product_id inline|full|thumbnail]. Example: [amazon 1590597559 thumbnail]');
}

/**
 * Implementation of hook_filter().
 */
function amazon_filter_filter($op, $delta = 0, $format = -1, $text = '') {
  if ($op == 'list') {
    return array(0 => t('Amazon filter'));
  }

  switch ($delta) {
    case 0:
      switch ($op) {
        case 'description':
          return t('Lets writers use the [amazon] tag to embed Amazon product information in text.');
        case 'prepare':
          return $text;
        case 'process':
          return _amazon_filter_process_text($text);
      }
      break;
  }
}

function _amazon_filter_process_text($text) {
  $pattern = "/\[amazon +(.*?)(?: +(.*?))?\]/";
  $matches = array();
  if (preg_match_all($pattern, $text, $matches)) {
    $search = $matches[0];
    $replace = array();
    foreach ($matches[0] as $key => $value) {
      $asin = $matches[1][$key];
      $action = $matches[2][$key];
      $items = amazon_item_lookup($asin);
      $item = "";
      if (!empty($items)) {
        $item = $items[$asin];
      }
      if (!empty($item)) {
        switch ($action) {
          case "":
          case 'inline':
            $replace[] = theme('amazon_inline_item', $item);
            break;

          case 'thumbnail': // Handle themeable cases, like thumbnail, full.
          case 'full':
            $replace[] = theme('amazon_item', $item, $action);
            break;

          default:  // Allow to use anything found in the item.
            $replace[] = theme('amazon_detail', $item, $action);
            break;
        }
      } else { // error case
        $replace[] = "<!-- The Amazon product '$asin' could not be found.-->";
      }
    }
    $text = str_replace($search, $replace, $text);
  }

  return $text;
}
